# Docker Desktop
# https://docs.docker.com/desktop/install/windows-install/
docker version

# .NET SDK
dotnet --list-sdks

# VS Code with extensions
# https://code.visualstudio.com/
code --install-extension ms-dotnettools.csdevkit
code --install-extension ms-azuretools.vscode-docker
code --install-extension ms-azuretools.vscode-azureappservice

# Azure CLI
az version
az upgrade 
az extension list --output table
az extension add --name containerapp --upgrade

# PowerShell 7
$psversiontable

# Azure login
az login --tenant "819ebf55-0973-4703-b006-581a48f25961"
az account list --all --query "[].{name:name, state:state, isDefault:isDefault, subscriptionId:id, tenantId:tenantId}" --output table
az account set --subscription "ece756e9-1860-4c65-a982-cfb8ac39e0d2"
az account show

# --- Variables ---------------
$location = 'westeurope'
$rg       = 'rg-az2003'
$vnet     = 'vnet-az2003'
$sb       = 'sb-az2003'
$acr      = 'acr2003'
# -----------------------------

# Resource group
az group create --name $rg --location $location
az group list --query "sort_by([].{name:name, location:location}, &name)" --output table

# Virtual network
az network vnet create --name $vnet --resource-group $rg --location $location --address-prefixes '10.0.0.0/16' --subnet-name 'PESubnet' --subnet-prefix '10.0.0.0/24'
az network vnet subnet create --name 'ACASubnet' --vnet-name $vnet --resource-group $rg --address-prefix '10.0.4.0/23'
az network vnet subnet list --vnet-name $vnet --resource-group $rg --output table

# Service bus
az servicebus namespace create --name $sb --resource-group $rg --location $location --sku 'Basic'
az servicebus namespace show --name $sb --resource-group $rg --query "{name:name, location:location, sku:sku.name, status:status, serviceBusEndpoint:serviceBusEndpoint}" --output table

# Azure container registry
az acr create --name $acr --resource-group $rg --location $location --sku 'Premium' --admin-enabled true
az acr show --name $acr --resource-group $rg --query "{name:name, location:location, sku:sku.name, loginServer:loginServer, adminUserEnabled:adminUserEnabled}" --output table

# WebAPI app
$origdir = $pwd
mkdir ../az2003-webapi
cd ../az2003-webapi
dotnet new webapi --no-https
dotnet build
#     VS Code:   .NET: Generate Assets for Build and Debug
echo '[Bb]in/' > .gitignore
echo '[Oo]bj/' >> .gitignore
#     VS Code:   Publish to GitHub public repository
cd $origdir

# Docker image
#     VS Code:   az2003-webapi: Add Docker Files to Workspace
#                               .NET ASP.NET Core
#                               Linux
#                               Port: 5000
#                               Docker Compose: No
cd ../az2003-webapi
docker build --tag aspnetcorecontainer:latest .

$loginserver = az acr show --name $acr --resource-group $rg --query loginServer --output tsv
docker image tag aspnetcorecontainer "$loginserver/aspnetcorecontainer:v1"
docker image ls
az acr login --name $acr
docker push "$loginserver/aspnetcorecontainer:v1"

# Azure DevOps and starter pipeline
#
# Azure Portal